{"version":3,"sources":["component/Cards/Cards.module.css","component/Cards/Cards.js","api/index.js","component/Chart/Chart.js","component/Country/Country.js","App.js","index.js","App.module.css","component/Chart/Chart.module.css","component/Country/Country.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changeAbleUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","Country","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetcheddata","setState","this","href","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"gGACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,KAAO,oBAAoB,SAAW,wBAAwB,UAAY,yBAAyB,OAAS,wB,4NC4DpJC,EAxDH,SAAC,GAAwD,IAAD,IAAtDC,KAAMC,EAAgD,EAAhDA,UAAYC,EAAoC,EAApCA,UAAYC,EAAwB,EAAxBA,OAASC,EAAe,EAAfA,WACpD,OAAIH,EAIH,yBAAKI,UAAWC,IAAOC,WACtB,kBAACC,EAAA,EAAD,CAAMD,WAAS,EAACE,QAAS,EAAGC,QAAQ,UAC1B,kBAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAEV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOY,WAC5E,kBAACC,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,YACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACDC,MAAO,EACPC,IAAKxB,EAAUyB,MACfC,SAAU,IACVC,UAAU,OAGX,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGO,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAEV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOJ,YAC5E,kBAACiB,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,aACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACDC,MAAO,EACPC,IAAKvB,EAAUwB,MACfC,SAAU,IACVC,UAAU,OAGX,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,wCAGO,kBAACf,EAAA,EAAD,CAAMG,MAAI,EAACC,UAAWC,IAAMC,GAAI,GAAIC,GAAI,EAAEV,UAAWW,IAAGV,IAAOW,KAAMX,IAAOH,SAC5E,kBAACgB,EAAA,EAAD,KACP,kBAACC,EAAA,EAAD,CAAYC,MAAM,gBAAgBC,cAAY,GAA9C,UACA,kBAACF,EAAA,EAAD,CAAYG,QAAQ,MAClB,kBAAC,IAAD,CACDC,MAAO,EACPC,IAAKtB,EAAOuB,MACZC,SAAU,IACVC,UAAU,OAGX,kBAACR,EAAA,EAAD,CAAYC,MAAM,iBAAiB,IAAIQ,KAAKzB,GAAY0B,gBACxD,kBAACV,EAAA,EAAD,CAAYG,QAAQ,SAApB,2CA/CG,c,yBCNHQ,EAAI,iCAGGC,EAAS,uCAAE,WAAOC,GAAP,2BAAAC,EAAA,6DACnBC,EAAcJ,EACfE,IACFE,EAAc,GAAD,OAAIJ,EAAJ,sBAAqBE,IAHZ,kBAMsCG,IAAMC,IAAIF,GANhD,2BAMfnC,KAAMC,EANS,EAMTA,UAAUC,EAND,EAMCA,UAAUC,EANX,EAMWA,OAAOC,EANlB,EAMkBA,WANlB,kBAOf,CAACH,YAAUC,YAAUC,SAAOC,eAPb,kCAUpBkC,QAAQC,IAAR,MAVoB,0DAAF,sDAcTC,EAAc,uCAAG,gCAAAN,EAAA,+EAELE,IAAMC,IAAN,UAAaN,EAAb,WAFK,uBAEpB/B,EAFoB,EAEpBA,KAEFyC,EAAezC,EAAK0C,KAAI,SAACC,GAAD,MAAgB,CAC7C1C,UAAW0C,EAAU1C,UAAU2C,MAC/BzC,OAAQwC,EAAUxC,OAAOyC,MACzBC,KAAMF,EAAUG,eAPW,kBASrBL,GATqB,yFAAH,qDAedM,EAAc,uCAAE,8BAAAb,EAAA,+EAEOE,IAAMC,IAAN,UAAaN,EAAb,eAFP,uBAEZiB,EAFY,EAEpBhD,KAAQgD,UAFY,kBAGpBA,EAAUN,KAAI,SAACT,GAAD,OAAWA,EAAQgB,SAHb,gCAM3BX,QAAQC,IAAR,MAN2B,yDAAF,qD,yBCiCZW,EA7DD,SAAC,GAAiD,IAAD,IAA9ClD,KAAOC,EAAuC,EAAvCA,UAAUC,EAA6B,EAA7BA,UAAUC,EAAmB,EAAnBA,OAAQ8B,EAAW,EAAXA,QAAW,EAC7BkB,mBAAS,IADoB,mBACvDR,EADuD,KAC7CS,EAD6C,KAG3DC,qBAAU,YACM,uCAAG,sBAAAnB,EAAA,kEAChBkB,EADgB,SACGZ,IADH,6EAAH,qDAIbc,KACA,IACH,IAAMC,EACLZ,EAAUa,OAET,kBAAC,OAAD,CACAxD,KAAM,CACLyD,OAAOd,EAAUD,KAAI,qBAAEG,QACvBa,SAAS,CAAC,CACT1D,KAAK2C,EAAUD,KAAI,qBAAEzC,aACrB0D,MAAM,WACNC,YAAY,UACZC,MAAK,GACJ,CACD7D,KAAK2C,EAAUD,KAAI,qBAAEvC,UACrBwD,MAAM,SACNC,YAAY,MACZE,gBAAgB,oBAChBD,MAAK,OAGH,KAEAE,EACH9D,EAEK,kBAAC,MAAD,CACID,KAAM,CACFyD,OAAO,CAAC,WAAW,YAAY,UAC/BC,SAAS,CAAC,CACNC,MAAM,SACNG,gBAAgB,CAChB,oBACA,oBACA,qBAEA9D,KAAK,CAACC,EAAUyB,MAAMxB,EAAUwB,MAAMvB,EAAOuB,UAGrDsC,QAAS,CACLC,OAAQ,CAACC,SAAQ,GACjBC,MAAO,CAACD,SAAS,EAAOE,KAAK,yBAAD,OAA0BnC,OAGhE,KAET,OACC,yBAAK5B,UAAWC,IAAOC,WACtB0B,EAAU8B,EAASR,I,mCCjCPc,EAtBC,SAAC,GAA2B,IAA1BC,EAAyB,EAAzBA,oBAAyB,EACInB,mBAAS,IADb,mBACnCoB,EADmC,KAClBC,EADkB,KAY1C,OARAnB,qBAAU,YACK,uCAAE,sBAAAnB,EAAA,kEACfsC,EADe,SACWzB,IADX,6EAAF,qDAGdO,KAEC,CAACkB,IAGF,kBAACC,EAAA,EAAD,CAAapE,UAAWC,IAAOoE,aAC7B,kBAACC,EAAA,EAAD,CAAcC,aAAa,GAAGC,SAAU,SAACC,GAAD,OAAKR,EAAoBQ,EAAEC,OAAOrD,SACxE,4BAAQA,MAAM,IAAd,UACC6C,EAAiB7B,KAAI,SAACT,EAAQ+C,GAAT,OAAc,4BAAQC,IAAKD,EAAGtD,MAAOO,GAAUA,S,kCCa5DiD,E,4MA7BZC,MAAM,CACLnF,KAAK,GACLiC,QAAQ,I,EAOVqC,oB,uCAAoB,WAAMrC,GAAN,eAAAC,EAAA,sEACMF,EAAUC,GADhB,OACZmD,EADY,OAElB,EAAKC,SAAS,CAAErF,KAAKoF,EAAcnD,QAAQA,IAFzB,2C,wPAJMD,I,OAAlBoD,E,OACNE,KAAKD,SAAS,CAACrF,KAAKoF,I,qIAQb,IAAD,EACeE,KAAKH,MAAnBnF,EADD,EACCA,KAAKiC,EADN,EACMA,QACZ,OACE,yBAAK5B,UAAWC,IAAOC,WACvB,uBAAGgF,KAAK,kEAAkER,OAAO,SAAQ,yBAAK1E,UAAWC,IAAOkF,MAAOC,IAAKC,IAAaC,IAAI,cAC7I,gIACE,kBAAC,EAAD,CAAO3F,KAAMA,IACb,kBAAC,EAAD,CAASsE,oBAAqBgB,KAAKhB,sBACnC,kBAAC,EAAD,CAAOtE,KAAMA,EAAMiC,QAASA,S,GAvBlB2D,IAAMC,WCCxBC,IAASC,OAAO,kBAAC,EAAD,MACdC,SAASC,eAAe,U,mBCN1BpG,EAAOC,QAAU,CAAC,UAAY,uBAAuB,MAAQ,qB,mBCA7DD,EAAOC,QAAU,CAAC,UAAY,2B,mBCA9BD,EAAOC,QAAU,CAAC,YAAc,+B,mBCDhCD,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.10301666.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3Qh7r\",\"card\":\"Cards_card__1fGMz\",\"infected\":\"Cards_infected__2bTHp\",\"recovered\":\"Cards_recovered__3cMXT\",\"deaths\":\"Cards_deaths__nfWmG\"};","import React from'react';\r\nimport{ Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\nconst Cards=({data:{confirmed , recovered , deaths , lastUpdate}})=>{\r\n\tif(!confirmed){\r\n\t\treturn 'Loading...';\r\n\t}\r\n\treturn(\r\n\t\t<div className={styles.container}>\r\n\t\t <Grid container spacing={3} justify=\"center\">\r\n\t            <Grid item component={Card} xs={12} md={3}className={cx(styles.card, styles.infected)}>\r\n\t\t           <CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t  <CountUp\r\n\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\tend={confirmed.value}\r\n\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\tseparator=\",\"\r\n                          />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n\t               </CardContent>  \r\n\t            </Grid>\r\n\t            <Grid item component={Card} xs={12} md={3}className={cx(styles.card, styles.recovered)}>\r\n\t\t           <CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t  <CountUp\r\n\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\tend={recovered.value}\r\n\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\tseparator=\",\"\r\n                          />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n\t               </CardContent>  \r\n\t            </Grid>\r\n\t            <Grid item component={Card} xs={12} md={3}className={cx(styles.card, styles.deaths)}>\r\n\t\t           <CardContent>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"h5\">\r\n\t\t\t\t\t\t  <CountUp\r\n\t\t\t\t\t\t\tstart={0}\r\n\t\t\t\t\t\t\tend={deaths.value}\r\n\t\t\t\t\t\t\tduration={2.5}\r\n\t\t\t\t\t\t\tseparator=\",\"\r\n                          />\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n\t               </CardContent>  \r\n\t            </Grid>\r\n\t\t  </Grid>\r\n\t    </div>\r\n\t)\r\n}\r\nexport default Cards;","import axios from 'axios';\r\nconst url='https://covid19.mathdro.id/api';\r\n\r\n\r\nexport const fetchData= async (country) => {\r\n\tlet changeAbleUrl=url;\r\n\tif(country){\r\n\t\tchangeAbleUrl=`${url}/countries/${country}`;\r\n\t}\r\n\ttry{\r\n\t\tconst {data:{confirmed,recovered,deaths,lastUpdate} }=await axios.get(changeAbleUrl);\r\n\t\treturn {confirmed,recovered,deaths,lastUpdate};\r\n\t}\r\n\tcatch(error){\r\n    console.log(error)\r\n\t}\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n\ttry{\r\n\t\tconst { data } = await axios.get(`${url}/daily`);\r\n\r\n\t\tconst modifiedData = data.map((dailyData) => ({\r\n\t\t\tconfirmed: dailyData.confirmed.total,\r\n\t\t\tdeaths: dailyData.deaths.total,\r\n\t\t\tdate: dailyData.reportDate,\r\n\t\t}));\r\n\t\treturn modifiedData;\r\n\r\n\t} catch(error){\t\r\n  }\r\n}\r\n\r\nexport const fetchCountries =async ()=>{\r\n\ttry{\r\n\t\tconst {data : {countries}} =await axios.get(`${url}/countries`);\r\n\t\treturn countries.map((country)=>country.name);\r\n\t}\r\n\tcatch(error){\r\n\t\tconsole.log(error);\r\n\t}\r\n}","import React,{useState,useEffect} from'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line,Bar} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ( {data: {confirmed,recovered,deaths},country})=>{\r\n\tconst [dailyData,setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n     \tconst fetchAPI = async () =>{\r\n     \t\tsetDailyData(await fetchDailyData());\r\n     \t}\r\n        \r\n       fetchAPI();\r\n     },[]);\r\n    const lineChart = (\r\n    \tdailyData.length\r\n    \t?(\r\n    \t\t<Line\r\n     \tdata={{\r\n     \t\tlabels:dailyData.map(({date}) => date),\r\n     \t\tdatasets:[{\r\n     \t\t\tdata:dailyData.map(({confirmed})=> confirmed),\r\n     \t\t\tlabel:'Infected',\r\n     \t\t\tborderColor:'#3333ff',\r\n     \t\t\tfill:true,\r\n     \t\t},{\r\n     \t\t\tdata:dailyData.map(({deaths})=>deaths),\r\n     \t\t\tlabel:'Deaths',\r\n     \t\t\tborderColor:'red',\r\n     \t\t\tbackgroundColor:'rgba(255,0,0,0.5)',\r\n     \t\t\tfill:true,\r\n            }],\r\n     \t}}\r\n     \t/>):null\r\n    );\r\n    const barChart=(\r\n       confirmed\r\n        ?(\r\n            <Bar\r\n                data={{\r\n                    labels:['Infected','Recovered','Deaths'],\r\n                    datasets:[{\r\n                        label:'People',\r\n                        backgroundColor:[\r\n                        'rgba(0,0,255,0.7)',\r\n                        'rgba(0,255,0,0.7)',\r\n                        'rgba(255,0,0,0.7)',\r\n                        ],\r\n                        data:[confirmed.value,recovered.value,deaths.value]\r\n                    }]\r\n                }}\r\n                options={{\r\n                    legend: {display:false},\r\n                    title: {display: true , text:`Current statistics in ${country}`},\r\n                }}\r\n             />\r\n        ):null\r\n\t);\r\n\treturn(\r\n\t\t<div className={styles.container}>\r\n\t\t{country ? barChart:lineChart}\r\n\t\t</div>\r\n\r\n)\r\n}\r\nexport default Chart;","import React,{useState,useEffect} from'react';\r\nimport {NativeSelect,FormControl} from '@material-ui/core';\r\nimport styles from './Country.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\n\r\nconst Country = ({handleCountryChange}) => {\r\n\tconst [fetchedCountries,setFetchedCountries] =useState([]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tconst fetchAPI =async () => {\r\n\t\t\tsetFetchedCountries(await fetchCountries());\r\n\t\t}\r\n\t\tfetchAPI();\r\n\r\n\t},[setFetchedCountries]);\r\n\t\r\n\treturn(\r\n\t\t<FormControl className={styles.formControl}>\r\n\t\t  <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n\t\t    <option value=\"\">Global</option>\r\n\t\t    {fetchedCountries.map((country,i)=> <option key={i} value={country}>{country}</option>)}\r\n\t\t  </NativeSelect>\r\n\t\t</FormControl>\r\n\t)\r\n\r\n}\r\nexport default Country;","import React from 'react';\r\nimport { Cards,Chart,Country } from './component';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\nimport coronaImage from './images/image.png';\r\nclass App extends React.Component{\r\n   state={\r\n    data:{},\r\n    country:'',\r\n   }\r\n  async componentDidMount(){\r\n    const fetcheddata=await fetchData();\r\n    this.setState({data:fetcheddata});\r\n   \r\n  }\r\n  handleCountryChange=async(country)=>{\r\n    const fetcheddata=await fetchData(country);\r\n    this.setState({ data:fetcheddata , country:country});\r\n\r\n  }\r\n  render(){\r\n    const {data,country}=this.state;\r\n    return (\r\n      <div className={styles.container}>\r\n      <a href=\"https://www.who.int/emergencies/diseases/novel-coronavirus-2019\" target=\"blank\"><img className={styles.image} src={coronaImage} alt=\"COVID-19\"/></a>\r\n      <p>Coronavirus disease (COVID-19) is an infectious disease caused by a newly discovered coronavirus.</p>\r\n        <Cards data={data}/>\r\n        <Country handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country}/>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1I0zs\",\"image\":\"App_image__wTVd-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2aHlm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Country_formControl__2DinF\"};","module.exports = __webpack_public_path__ + \"static/media/image.6ce9074d.png\";"],"sourceRoot":""}